// Generated by CoffeeScript 1.7.1
var current_thing, d, first_thing_index, getProjectsJSON, init, likesAnimLoop, links, onClick, onMouseOut, onMouseOver, parseJSON, random_stuff_index, randomizeILikeStuff, scrollILike, stuff, stuff_el;

d = document;

links = [];

stuff = [];

random_stuff_index = -1;

first_thing_index = -1;

current_thing = null;

stuff_el = d.querySelector('#stuff');

getProjectsJSON = function() {
  return $.ajax({
    type: "GET",
    url: "projects.json",
    dataType: "json",
    success: init
  });
};

parseJSON = function(data) {
  var i, item, pBlurb, pCat, pImage, pLink, pTitle, projectHtml, _i, _len, _ref, _results;
  _ref = data.projects;
  _results = [];
  for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
    item = _ref[i];
    links.push(item.link);
    stuff.push({
      name: item.stuff,
      left: -1,
      width: -1
    });
    pCat = "<h4>" + item.category + "</h4>";
    pTitle = "<h2>" + item.title + "</h2>";
    pImage = "<img src='" + item.image + "'/>";
    pBlurb = "<p>" + item.blurb + "</p>";
    pLink = "<a href='" + item.link + "' target='_blank'>";
    projectHtml = "<div class='project' id='" + i + "'> " + pTitle + " " + pCat + " " + pBlurb + "</div>";
    _results.push($("#content").append(projectHtml));
  }
  return _results;
};

randomizeILikeStuff = function() {
  var box, i, thing, thing_el, _i, _len;
  box = null;
  stuff_el.innerHTML = '';
  for (i = _i = 0, _len = stuff.length; _i < _len; i = ++_i) {
    thing = stuff[i];
    if (!(thing.name !== '')) {
      continue;
    }
    thing_el = d.createElement('a');
    thing_el.className = 'thing';
    thing_el.innerHTML = thing.name.replace(/\s/g, '&nbsp;');
    stuff_el.appendChild(thing_el);
    box = thing_el.getBoundingClientRect();
    thing.left = box.left;
    thing.width = box.width;
    if (first_thing_index === -1) {
      first_thing_index = i;
    }
  }
  random_stuff_index = Math.floor(Math.random() * stuff.length);
  current_thing = stuff[random_stuff_index];
  return stuff_el.setAttribute('style', "width: " + first_thing_index.width + "px");
};

scrollILike = function() {
  console.log(current_thing);
  if (current_thing.name !== '') {
    stuff_el.setAttribute('style', "width: " + current_thing.width + "px");
    stuff_el.goalScrollLeft = current_thing.left - stuff[first_thing_index].left;
    stuff_el.cur_scroll_left = stuff_el.scrollLeft;
    return likesAnimLoop();
  }
};

likesAnimLoop = function() {
  if (Math.abs(stuff_el.scrollLeft - stuff_el.goalScrollLeft) < 1.1) {
    return stuff_el.scrollLeft = stuff_el.goalScrollLeft;
  } else {
    stuff_el.cur_scroll_left -= (stuff_el.cur_scroll_left - stuff_el.goalScrollLeft) * 0.08;
    stuff_el.scrollLeft = stuff_el.cur_scroll_left;
    return requestAnimationFrame(likesAnimLoop);
  }
};

init = function(data) {
  parseJSON(data);
  randomizeILikeStuff();
  setTimeout((function() {
    return window.scrollTo(0, 1);
  }), 100);
  return setTimeout((function() {
    return scrollILike();
  }), 1000);
};

onMouseOver = function(evt) {
  if (evt.target.classList.contains('project')) {
    return evt.target.classList.add('hot');
  }
};

onMouseOut = function(evt) {
  if (evt.target.classList.contains('project')) {
    return evt.target.classList.remove('hot');
  }
};

onClick = function(evt) {
  if (evt.target.classList.contains('project')) {
    window.location = links[+evt.target.id];
  }
  if (evt.target.id === 'stuff') {
    return window.location = links[random_stuff_index];
  }
};

$(d).ready(getProjectsJSON());

d.body.addEventListener('mouseover', onMouseOver);

d.body.addEventListener('mouseout', onMouseOut);

d.body.addEventListener('click', onClick);

/*
//@ sourceMappingURL=main.map
*/
